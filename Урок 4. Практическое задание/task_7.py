"""
7. Реализовать генератор с помощью функции с ключевым словом yield,
 создающим очередное значение.

 При вызове функции должен создаваться объект-генератор.
 Функция должна вызываться следующим образом: for el in fact(n).
 Функция отвечает за получение факториала числа,
 а в цикле необходимо выводить только первые n чисел, начиная с 1! и до n!.

Подсказка: факториал числа n — произведение чисел от 1 до n.
Например, факториал четырёх 4! = 1 * 2 * 3 * 4 = 24.
"""

from math import factorial

# Выводим задание на экран
print(f'Реализовать генератор с помощью функции с ключевым словом yield,\n'
      f'создающим очередное значение.\n\n'
      f'При вызове функции должен создаваться объект-генератор.\n'
      f'Функция должна вызываться следующим образом: for el in fact(n).\n'
      f'Функция отвечает за получение факториала числа,\n'
      f'а в цикле необходимо выводить только первые n чисел, начиная с 1! и до n!.\n')


# Определяем функцию, вычисляющую факториал
def __factorial(income):
    for index in range(1, income + 1):
        yield factorial(index)


# Запрашиваем конечный элемент цепочки вычислений факториалов
digit = int(input('Введите число для вычисления последоательности факториала '))
i = 1

# Выводим на экран цепочку вычислений факториала
for el in __factorial(digit):
    print(f'Факториал {i} равен ', el)
    i = i + 1
