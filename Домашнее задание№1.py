# 1. Поработайте с переменными, создайте несколько, выведите на экран.
x = 1
y = input()
profit = 'прибыль'

print(x)
print(y)
print(profit)
# Запросите у пользователя некоторые числа и строки и сохраните в переменные, затем выведите на экран.
number_ph = int(input('три последних цифры номера телефона: '))
city = input('Введите ваш город: ')

print("Вы ввели:", number_ph)
print("Вы ввели город:", city)

# 2. Пользователь вводит время в секундах. Переведите время в часы, минуты, секунды и выведите в формате чч:мм:сс.
# Используйте форматирование строк.
time_sec = int(input('Введите время в секундах: '))
hours = time_sec//3600
hours_res = (hours) if hours > 10 else ('0' + str(hours))
minutes = (time_sec % 3600)//60
minutes_res = (minutes) if minutes > 10 else ('0' + str(minutes))
seconds = (time_sec % 3600) % 60
seconds_res = (seconds) if seconds > 10 else ('0' + str(seconds))
if hours > 24:
    print('Количество часов более 24, введите другое количество секунд.')
else:
    print(f'Московское время: {hours_res}:{minutes_res}:{seconds_res}')

# 3. Узнайте у пользователя число n. Найдите сумму чисел n + nn + nnn.
# Например, пользователь ввёл число 3. Считаем 3 + 33 + 333 = 369.

n = input('Введите число: ')
nn = int(n+n)
nnn = int(n+n+n)
n = int(n)
result = n+nn+nnn

print(result)

# 4. Пользователь вводит целое положительное число. Найдите самую большую цифру в числе.
# Для решения используйте цикл while и арифметические операции.
n = int(input('Целое положительное число: '))
max = n % 10
while True:
    n = n // 10
    if n % 10 > max:
        max = n % 10
    elif n > 9:
        continue
    else:
        print(f'Максимальное число: {max}')
        break
# 5. Запросите у пользователя значения выручки и издержек фирмы.
# Определите, с каким финансовым результатом работает фирма.
# Например, прибыль — выручка больше издержек, или убыток — издержки больше выручки. Выведите соответствующее сообщение.

revenue = int(input('Выручка составляет: '))
costs = int(input('Ваши издержки: '))
if revenue > costs:
    print("Прибыль равна: {} рублей".format(revenue - costs))
elif revenue < costs:
    print('Убыток равен:{} рублей'.format(revenue - costs))
elif revenue == costs:
    print('Точка безубыточности:{} рублей'.format(revenue - costs))

# 6. Если фирма отработала с прибылью, вычислите рентабельность выручки. Это отношение прибыли к выручке.
# Далее запросите численность сотрудников фирмы и определите прибыль фирмы в расчёте на одного сотрудника.
revenue = int(input('Выручка составляет: '))
costs = int(input('Ваши издержки: '))
profit = revenue - costs
staff = int(input('Количество сотрудников: '))
if revenue > costs:
    print("Рентабельность: {} рублей".format(profit/revenue))
    print('Прибыль на 1 сотрудника:{} рублей'.format(profit / staff))
elif revenue < costs:
    print('Убыток равен:{} рублей'.format(revenue - costs))
elif revenue == costs:
    print('Точка безубыточности:{} рублей'.format(revenue - costs))

# 7. Спортсмен занимается ежедневными пробежками. В первый день его результат составил a километров.
# Каждый день спортсмен увеличивал результат на 10% относительно предыдущего.
# Требуется определить номер дня, на который результат спортсмена составит не менее b километров.
# Программа должна принимать значения параметров a и b и выводить одно натуральное число — номер дня.
# Например: a = 2, b = 3. Результат:
# 1-й день: 2
# 2-й день: 2,2
# 3-й день: 2,42
# 4-й день: 2,66
# 5-й день: 2,93
# 6-й день: 3,22

a = int(input('Сколько км спортсмен пробежал в первый день?: '))
b = int(input('Желаемый результат в км: '))
day = 1
while a < b:
        a += a * 0.1
        day += 1
print(f'На {day}-й день достиг результата — не менее {b} км')