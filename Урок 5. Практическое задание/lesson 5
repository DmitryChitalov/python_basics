"""
1)Создать программно файл в текстовом формате,
записать в него построчно данные, вводимые пользователем.
Об окончании ввода данных свидетельствует пустая строка.
"""

file = open('test.txt', 'w', encoding='utf-8')
text = input('Введите текст')
while text:
    file.writelines(text)
    text = input('Введите текст или нажмите Enter, чтобы завершить запись')
    if not text:
        break

file.close()
"""
2)Создать текстовый файл (не программно), сохранить в нем несколько строк,
выполнить подсчет количества строк, количества слов в каждой строке.
"""

file = open('test.txt', 'r', encoding='utf-8')
text = file.readlines()
line = len(text)
print(f'Всего строк: {line}')
for line in text:
    print(f'{len(line.split())}')
file.close()
"""
3)Создать текстовый файл (не программно), построчно записать фамилии сотрудников
и величину их окладов (не менее 10 строк). Определить, кто из сотрудников имеет оклад менее 20 тыс.,
вывести фамилии этих сотрудников. Выполнить подсчет средней величины дохода сотрудников.
Пример файла:
Иванов 23543.12
Петров 13749.32
"""
money = []
with open('test.txt', 'r', encoding='utf-8') as f:
    print ('Зарплату менее 20000 рублей имеют:')
    for i in f:
        b = i.split()
        i = int(i.split(' ')[1]) 
        if i < 20000:
            print (f' {b}')
        money.append(i)
total = 0
line = len(money)
for number in money:
    total += number
medium = total / line
print(f'Средняя зарплата: {medium}')
"""
4)Создать (не программно) текстовый файл со следующим содержимым:
One — 1
Two — 2
Three — 3
Four — 4
Необходимо написать программу, открывающую файл на чтение и считывающую построчно данные.
При этом английские числительные должны заменяться на русские.
Новый блок строк должен записываться в новый текстовый файл.
"""

translate = {'One' : 'Один', 'Two' : 'Два', 'Three' : 'Три', 'Four' : 'Четыре'}

with open('test.txt', 'r', encoding='utf-8') as f:
    for i in f:
        i = i.split(' ', 1)
"""
5)Создать (программно) текстовый файл, записать в него программно набор чисел,
 разделенных пробелами. Программа должна подсчитывать сумму чисел в файле и выводить ее на экран.
"""

with open('test.txt', 'w+', encoding='utf-8') as f:
    numbers = input('Введите цифры через пробел ')
    f.writelines(numbers)
    result = numbers.split()
    print(sum(map(int, result)))
"""	
6)Необходимо создать (не программно) текстовый файл, где каждая строка описывает учебный предмет и наличие лекционных, 
практических и лабораторных занятий по этому предмету и их количество. Важно, чтобы для каждого предмета не обязательно
были все типы занятий. Сформировать словарь, содержащий название предмета и общее количество занятий по нему. 
Вывести словарь на экран.
Примеры строк файла: Информатика:   100(л)   50(пр)   20(лаб).
                                        Физика:   30(л)   —   10(лаб)
                                        Физкультура:   —   30(пр)   —
Пример словаря: {“Информатика”: 170, “Физика”: 40, “Физкультура”: 30}
"""

import re

result = {}
with open('test.txt', 'r', encoding='UTF-8') as f:
    text = f.read()
    f.seek(0)
    for i in f:
        row_items = i.split(': ')
        hours = re.findall(r"\d+", row_items[1])
        result.update({row_items[0]: sum([int(i) for i in hours])})
print(result)
"""
7)Создать вручную и заполнить несколькими строками текстовый файл, в котором каждая строка будет содержать данные о фирме: название, форма собственности, выручка, издержки.
Пример строки файла: firm_1 ООО 10000 5000.

Необходимо построчно прочитать файл, вычислить прибыль каждой компании, а также среднюю прибыль. Если фирма получила убытки, в расчёт средней прибыли её не включать.
Далее реализовать список. Он должен содержать словарь с фирмами и их прибылями, а также словарь со средней прибылью. Если фирма получила убытки, также добавить её в словарь (со значением убытков).
Пример списка: [{“firm_1”: 5000, “firm_2”: 3000, “firm_3”: 1000}, {“average_profit”: 2000}].

Итоговый список сохранить в виде json-объекта в соответствующий файл.
Пример json-объекта:
[{"firm_1": 5000, "firm_2": 3000, "firm_3": 1000}, {"average_profit": 2000}]
"""
import json
profit = {}
pr = {}
prof = 0
average = 0
i = 0
with open('test.txt', 'r') as f:
    for line in f:
        name, firm, earning, damage = line.split()
        profit[name] = int(earning) - int(damage)
        if profit.setdefault(name) >= 0:
            prof = prof + profit.setdefault(name)
            i += 1
    if i != 0:
        average = prof / i
        print(f'Прибыль средняя - {average:.2f}')
    else:
        print('Прибыль средняя - отсутсвует. Все работают в убыток')
    pr = {'средняя прибыль': round(average)}
    profit.update(pr)
    print(f'Прибыль каждой компании - {profit}')

with open('test.json', 'w') as write_js:
    json.dump(profit, write_js)
