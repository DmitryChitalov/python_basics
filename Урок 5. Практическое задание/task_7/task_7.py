"""
7)	Создать вручную и заполнить несколькими строками текстовый файл, в котором каждая строка должна содержать данные о
фирме: название, форма собственности, выручка, издержки.
Пример строки файла: firm_1   ООО   10000   5000.
Необходимо построчно прочитать файл, вычислить прибыль каждой компании, а также среднюю прибыль. Если фирма получила
убытки, в расчет средней прибыли ее не включать.
Далее реализовать список. Он должен содержать словарь с фирмами и их прибылями, а также словарь со средней прибылью.
Если фирма получила убытки, также добавить ее в словарь (со значением убытков).
Пример списка: [{“firm_1”: 5000, “firm_2”: 3000, “firm_3”: 1000}, {“average_profit”: 2000}].
Итоговый список сохранить в виде json-объекта в соответствующий файл.
Пример json-объекта:
[{"firm_1": 5000, "firm_2": 3000, "firm_3": 1000}, {"average_profit": 2000}]
Подсказка: использовать менеджер контекста.
"""
import re
import json

# открываем файлы на чтение и запись
with open("firms.txt", encoding="utf-8") as list_firms, open("my_file.json", "w") as write_f:
    profit_dict = {}  # создаём словарь с доходами
    profit_sum = 0  # сумма дохода
    i = 0  # счётчик фирм с доходом
    for firm in list_firms:
        temp_list = firm.split(" ")  # получаем список на основе разделителя " "
        list_num = re.findall(r"\d+", firm)  # извлекаем числа из строки
        list_info = list(map(int, list_num))  # преобразуем целочисленный список
        if list_info[0] > list_info[1]:  # если есть доход
            i += 1
            profit = list_info[0] - list_info[1]    # вычисляем доход
            profit_sum = profit_sum + profit    # вычисляем суммарный доход
            profit_dict[temp_list[0]] = profit  # делаем запись в словарь фирм
        else:   # если убыток
            loss = list_info[0] - list_info[1]  # вычисляем убыток
            profit_dict[temp_list[0]] = loss    # делаем запись в словарь фирм

    profit_dict['average_profit'] = "%.2f" % (profit_sum / i)   # фиксируем среднюю прибыль в словаре
    json.dump(profit_dict, write_f)     # выполняем сериализацию
