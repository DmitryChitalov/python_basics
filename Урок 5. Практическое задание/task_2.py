"""
Задание 2. Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).
Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.
Решите через рекурсию. В задании нельзя применять циклы.
Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""

n = int(input("Введите число: "))


def enem(num):
    x = 0
    if num % 10 == 0:
        return x
    if (num % 10) % 2 == 0:
        x = x + 1
    return x + enem(num // 10)


def not_enem(num):
    y = 0
    if num % 10 == 0:
        return y
    if (num % 10) % 2 == 1:
        y = y + 1
    return y + not_enem(num // 10)


print(f"Количество четных и нечетных цифр в числе равно: ({enem(n)}, {not_enem(n)} )")
