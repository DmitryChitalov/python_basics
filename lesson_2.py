"""
1. Создать список и заполнить его элементами различных типов данных.
Реализовать скрипт проверки типа данных каждого элемента.
Использовать функцию type() для проверки типа.
Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.
"""

my_list = [5, "python", 12.80, (1, 2, 3), None]

for el in my_list:
    print(type(el))

"""
2. Для списка реализовать обмен значений соседних элементов. 
Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т. д. 
При нечётном количестве элементов последний сохранить на своём месте. 
Для заполнения списка элементов нужно использовать функцию input().
"""

new_list = list(input("Введите список элементов без пробелов: "))

a, b = 0, 1
while len(new_list) > b:
    new_list[a], new_list[b] = new_list[b], new_list[a]
    a += 2
    b += 2
print(new_list)

"""
3. Пользователь вводит месяц в виде целого числа от 1 до 12. 
Сообщить, к какому времени года относится месяц (зима, весна, лето, осень). 
Напишите решения через list и dict.
"""

my_dict = {1: "Winter", 2: "Winter", 12: "Winter", 3: "Sping", 4: "Sping", 5: "Sping",
           6: "Summer", 7: "Summer", 8: "Summer", 9: "Autumn", 10: "Autumn", 11: "Autumn"}

print(my_dict.get(int(input("Введите номер месяца: "))))

"""
4. Пользователь вводит строку из нескольких слов, разделённых пробелами. Вывести каждое слово с новой строки. 
Строки нужно пронумеровать. Если слово длинное, выводить только первые 10 букв в слове.
"""

exp = input("Введите несколько слов с пробелами: ").split(' ')

for i, el in enumerate(exp, 1):
    if len(el) > 10:
        el = el[0:10]
    print(f"{i}. {el}")

"""
5. Реализовать структуру «Рейтинг», представляющую собой набор натуральных чисел, который не возрастает. 
У пользователя нужно запрашивать новый элемент рейтинга. Если в рейтинге существуют элементы с одинаковыми значениями, 
то новый элемент с тем же значением должен разместиться после них.
"""

other_list = [7, 5, 3, 3, 2]
number = int(input("Введите натуральное число: "))
c = other_list.count(number)
for el in other_list:
    if c > 0:
        i = my_list.index(number)
        other_list.insert(i+c, number)
        break
    else:
        if number > el:
            j = other_list.index(el)
            other_list.insert(j, number)
            break
        elif number < other_list[len(other_list) - 1]:
            other_list.append(number)
print(other_list)