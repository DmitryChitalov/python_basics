from abc import ABC, abstractmethod


class MyabstractClass(ABC):
    @abstractmethod
    def coat(self):
        pass


class Clothes(MyabstractClass):
    def __init__(self, v, h):
        self.v = v
        self.h = h

    @property
    def coat(self):
        self.b1 = self.v / 6.5 + 0.5
        print(f"Расход ткани на пальто - {round(self.b1, 2)}")

    @property
    def suit(self):
        self.b2 = 2 * self.h + 0.3
        print(f"Расход ткани на костюм - {round(self.b2, 2)}")

    @property
    def common(self):
        b3 = self.b1 + self.b2
        print(f"Общий расход ткани - {round(b3, 2)}")


a = Clothes(5, 10)
a.coat
a.suit
a.common

"""
Задание 2.

Реализовать проект расчета суммарного расхода ткани на производство одежды.

Единственный класс этого проекта — одежда (класс Clothes).

К типам одежды в этом проекте относятся пальто и костюм.

У этих типов одежды существуют параметры:
размер (для пальто) и рост (для костюма). Это могут быть обычные числа: v и h, соответственно.

Для определения расхода ткани по каждому типу одежды использовать формулы: для пальто (v/6.5 + 0.5),
для костюма (2*h + 0.3). Проверить работу этих методов на реальных данных.

Реализовать общий подсчет расхода ткани.
Проверить на практике полученные на этом уроке знания: реализовать
абстрактный класс для единственного класса проекта,
проверить на практике работу декоратора @property

Пример:
Расход ткани на пальто = 1.27
Расход ткани на костюм = 20.30
Общий расход ткани = 21.57

Два класса: абстрактный и Clothes
"""
