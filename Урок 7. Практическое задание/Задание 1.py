"""Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()), который должен
принимать данные (список списков) для формирования матрицы.
Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
Примеры матриц: 3 на 2, 3 на 3, 2 на 4.

31 22
37 43
51 86

3 5 32
2 4 6
-1 64 -8

3 5 8 3
8 3 7 1


Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
Далее реализовать перегрузку метода __add__() для реализации операции сложения двух объектов класса Matrix
(двух матриц). Результатом сложения должна быть новая матрица.
Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки первой матрицы
складываем с первым элементом первой строки второй матрицы и т.д.
"""


class Matrix:
    def __init__(self, lst):
        self.lst = lst
        self.list1 = ''

    def __str__(self):

        for i in range(len(self.lst)):
            if len(self.list1) != 0:
                self.list1 += '\n'
            for g in self.lst[i]:
                self.list1 += f'{str(g)} '
        return self.list1

    def __add__(self, other):
        if len(self.lst) == len(other.lst):
            for i in range(len(self.lst)):
                for j in range(len(other.lst[0])):
                    self.lst[i][j] = self.lst[i][j] + other.lst[i][j]
            return Matrix(self.lst)
        else:
            return 'Матрицы должны быть одного размера'


lst = Matrix([[1, 2, 3], [4, 5, 6], [7, 8, 9]])
print('Матрица в привычном виде:')
print(lst)
print()
print(f'Результат сложения элементов матриц:')
list1 = Matrix([[1, 2, 3], [4, 5, 6], [7, 8, 9]])
list2 = Matrix([[1, 2, 3], [2, 3, 4], [5, 6, 7]])
print(list1 + list2)

"""
Матрица в привычном виде:
1 2 3 
4 5 6 
7 8 9 

Результат сложения элементов матриц:
2 4 6 
6 8 10 
12 14 16 
"""
