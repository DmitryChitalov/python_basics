 """
 1. Реализовать функцию, принимающую два числа (позиционные аргументы)
и выполняющую их деление. Числа запрашивать у пользователя,
предусмотреть обработку ситуации деления на ноль (try except).
Пример:
Введите первое число: 10
Введите второе число: 0
Вы что? Пытаетесь делить на 0!
Process finished with exit code 0
Пример:
Введите первое число: 10
Введите второе число: 10
1.0
Process finished with exit code 0
"""

def dividing_numbers(number_one, number_two):
    try:
        return number_one / number_two
    except ZeroDivisionError:
        return "Вы что? Пытаетесь делить на 0!"


try:
    first_number = float(input("Введите первое число: "))
    sec_number = float(input("Введите второе число: "))
    print(f"Ответ: {dividing_numbers(first_number, sec_number)}")
except ValueError:
    print("Необходимо ввести только числа!")
    """
    2. Реализовать функцию, принимающую несколько параметров,
описывающих данные пользователя: имя, фамилия, год рождения, город проживания, email, телефон.
Функция должна принимать параметры как именованные аргументы.
Реализовать вывод данных о пользователе одной строкой.
Пример:
Иван Иванов 1846 года рождения, проживает в городе Москва,
email: jackie@gmail.com, телефон: 01005321456

def personal_info(**info):
    print(f"{info['name']} {info['lastname']} {info['year_of_birth']} года рождения, "
          f"проживает в городе {info['city_of_residence']}, email: {info['email']}, телефон: {info['phone_number']}")

"""
personal_info(
    name="Иван",
    lastname="Иванов",
    year_of_birth="1846",
    city_of_residence="Москва",
    email="jackie@gmail.com",
    phone_number="01005321456")
    """
    3. Реализовать функцию my_func(), которая принимает три позиционных аргумента,
и возвращает сумму наибольших двух аргументов.
Попробуйте решить задачу двумя способами:
1) используя функцию sort()
2) без функции sort()

def my_func(*elem):
    print(sum(sorted(list(elem), reverse=True)[:2]))
"""

try:
    el_1 = int(input('Введите первое число: '))
    el_2 = int(input('Введите второе число: '))
    el_3 = int(input('Введите третье число: '))
    my_func(el_1, el_2, el_3)
except ValueError:
    print("Необходимо ввести только числа!\nПереход к следующему варианту.")
    """
    4. Программа принимает действительное положительное число x и целое отрицательное число y. Необходимо
выполнить возведение числа x в степень y. Задание необходимо реализовать в виде функции my_func(x, y).
При решении задания необходимо обойтись без встроенной функции возведения числа в степень!
ВНИМАНИЕ: использование встроенной функции = задание не принято
Постараться придумать свой алгоритм без **
"""
def my_func(x, y):
    try:
        if y < 0 <= x:
            res = 1
            for i in range(y, 0):
                res = res * x
            res = 1 / res
            return f"Ответ: {res}"
        else:
            return "Число 'у' должно быть отрицательным числом, а 'x' положительным!"
    except TypeError:\
        return 'Необходимо вводить только числа!'
    except ZeroDivisionError:\
        return "На ноль делить нельзя! Число 'x' должно быть больше нуля!"


try:
    el_1 = int(input('Введите целое положительное число x: '))
    el_2 = int(input('Введите целое отрицательное число у: '))
    print(my_func(el_1, el_2))
except ValueError:
    print('Необходимо вводить только числа!')
    """
    5. Программа запрашивает у пользователя строку чисел, разделенных пробелом. При нажатии Enter должна
    выводиться сумма чисел. Пользователь может продолжить ввод чисел, разделенных пробелом и снова
    нажать Enter. Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме. Но если
    вместо числа вводится специальный символ, выполнение программы завершается. Если специальный
    символ введен после нескольких чисел, то вначале нужно добавить сумму этих чисел к полученной
    ранее сумме и после этого завершить программу.
    """
    def get_sum(sum_of_num=0):
    lst = input("Введите числа через пробел, для завершения введите 'q': ").split()
    for num in range(len(lst)):
        if lst[num] != 'q':
            sum_of_num = sum_of_num + int(lst[num])
        else:
            break
    print(f"Ответ: {sum_of_num}")
    if "q" in lst:
        print("Завершение программы")
    else:
        get_sum(sum_of_num)


get_sum()

"""
6. Реализовать функцию int_func(), принимающую слово из маленьких
латинских букв и возвращающую его же, но с прописной первой буквой.
Например, print(int_func(‘text’)) -> Text.
Продолжить работу над заданием. В программу должна попадать строка из слов,
разделенных пробелом. Каждое слово состоит из латинских букв в нижнем регистре.
Сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы.
Необходимо использовать написанную ранее функцию int_func().
"""
def int_func(string):
    return string.title()


print(int_func("text"))


def title_func(string):
    lst_title = []
    lst_letter = string.split()
    for let in lst_letter:
        lst_title.append(int_func(let))
    print(*lst_title)


orig_text = str(input("Введите текст: "))
title_func(orig_text)

    
