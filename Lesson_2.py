-- Задача 1.Создать список и заполнить его элементами различных типов данных. Реализовать скрипт проверки типа данных каждого элемента. 
-- Использовать функцию type() для проверки типа. Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.

type_list = [9, 5/6, True, (1,2),[1,2], "test", {"shop": "ozon", "magnet": "chain stores"},]
for i in range (len(type_list)) :
    print(f"Тип переменной в списке: {type(type_list[i])}")
    
-- Задача 2.Для списка реализовать обмен значений соседних элементов. Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т. д. 
-- При нечётном количестве элементов последний сохранить на своём месте. Для заполнения списка элементов нужно использовать функцию input(). 

list = input("Введите список через пробел: ").split()
n = len(list)
for i in range(0, n - 1, 2): 
    list[i], list[i+1] = list[i+1], list[i] 
print("Результат обмена значений",list)

-- Задача 3.Пользователь вводит месяц в виде целого числа от 1 до 12. Сообщить, к какому времени года относится месяц (зима, весна, лето, осень). 
-- Напишите решения через list и dict.

dict = {1:'Зима',
        2:'Зима', 
        3:'Весна', 
        4:'Весна', 
        5:'Весна', 
        6:'Лето',
        7:'Лето',
        8:'Лето',
        9:'Осень',
        10:'Осень',
        11:'Осень',
        12:'Зима'}
month = int(input('Введите месяц: '))
i = dict [month]
print("Время года",i)

-- Задача 4.Пользователь вводит строку из нескольких слов, разделённых пробелами. 
-- Вывести каждое слово с новой строки. Строки нужно пронумеровать. Если слово длинное, выводить только первые 10 букв в слове.

my_list = input('Введите значения: ').split()
for i, el in enumerate(my_list, 1):
    print(i, el[0:10])
    
-- Задача 5.Реализовать структуру «Рейтинг», представляющую собой набор натуральных чисел, который не возрастает. У пользователя нужно запрашивать новый элемент рейтинга. 
-- Если в рейтинге существуют элементы с одинаковыми значениями, то новый элемент с тем же значением должен разместиться после них.
-- Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
-- Пользователь ввёл число 3. Результат: 7, 5, 3, 3, 3, 2.
-- Пользователь ввёл число 8. Результат: 8, 7, 5, 3, 3, 2.
-- Пользователь ввёл число 1. Результат: 7, 5, 3, 3, 2, 1.
-- Набор натуральных чисел можно задать сразу в коде, например, my_list = [7, 5, 3, 3, 2].

my_list = [7, 5, 3, 3, 1]
a = False
while not a:
    try:
        new_element = int(input('Новый элемент рейтинга: '))
        if new_element < 0:
            print('Должно быть положительное число')
            continue
        if new_element > max(my_list):
            my_list.insert(0, new_element)
            break
        if new_element < min(my_list):
            my_list.append(new_element)
            break
        for i, el in enumerate(my_list):
            if my_list[-1] == new_element:
                my_list.append(new_element)
                a = True
                break
            if el == new_element and el != my_list[i + 1]:
                my_list.insert(i + 1, new_element)
                a = True
                break
    except ValueError:
        print('Должно быть положительное число')

print(f'Измененный список {my_list}')

