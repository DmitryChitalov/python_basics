"""
Задание 1. Создать список и заполнить его элементами различных типов данных.
Реализовать проверку типа данных каждого элемента.
Использовать функцию type() для проверки типа.
Элементы списка можно не запрашивать у пользователя,
а указать явно, в программе.
Пример:
для списка [5, "string", 0.15, True, None]
результат
<class 'int'>
<class 'str'>
<class 'float'>
<class 'bool'>
<class 'NoneType'>
"""
test_list = [10, "Hello, world!", 3.14, True, None, 2343424, -2344]
for i in test_list:
    print(type(i))

"""
Задание 2. Для списка реализовать обмен значений соседних элементов,
т.е. значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д.
При нечетном количестве элементов последний сохранить на своем месте.
Для заполнения списка элементов необходимо использовать функцию input().
Пример:
Введите целые числа через пробел: 1 2 3 4
Результат: 2 1 4 3
Введите целые числа через пробел: 1 2 3
Результат: 2 1 3
"""

test_list = input("Введите целые числа через пробел: ").split()

for i in range(0, len(test_list) - 1, 2):
    test_list[i], test_list[i + 1] = test_list[i + 1], test_list[i]

print(test_list)

# 3. Пользователь вводит месяц в виде целого числа от 1 до 12.
# Сообщить к какому времени года относится месяц (зима, весна, лето, осень).
# Напишите два варианта решения: через list и через dict.
# Пример:
# Введите номер месяца: 10
# Результат через список: Осень
# Результат через словарь: Осень


month = int(input("Введите месяц в виде целого числа от 1 до 12"))
season_list = ['Зима', 'Весна', 'Лето', 'Осень', 'Некорректное число']
season_dict = {0: 'Зима', 1: 'Весна', 2: 'Лето', 3: 'Осень', 4: 'Некорректное число'}

if month < 3 or month == 12:
    print(f"Результат через список: {season_list[0]}")
    print(f"Результат через словарь: {season_dict.get(0)}")
elif month >= 3 and month <= 5:
    print(f"Результат через список: {season_list[1]}")
    print(f"Результат через словарь: {season_dict.get(1)}")
elif month >= 6 and month <= 8:
    print(f"Результат через список: {season_list[2]}")
    print(f"Результат через словарь: {season_dict.get(2)}")
elif month >= 9 and month <= 11:
    print(f"Результат через список: {season_list[3]}")
    print(f"Результат через словарь: {season_dict.get(3)}")
else:
    print(f"Результат через список: {season_list[4]}")
    print(f"Результат через словарь: {season_dict.get(4)}")

"""
4. Пользователь вводит строку из нескольких слов,
разделённых пробелами. Вывести каждое слово с новой строки.
Строки необходимо пронумеровать. Если слово длинное,
выводить только первые 10 букв в слове.
Пример:
Введите слова через пробел: раз два три
1. раз
2. два
3. три
Введите слова через пробел: раз перерефрижерированность
1. раз
2. перерефриж
"""
user_list = input('Введите строку, разделив слова пробелами').split()
for ind, el in enumerate(user_list, 1):
    print(ind, el[:10])

"""
5. Реализовать структуру «Рейтинг», представляющую собой не
возрастающий набор натуральных чисел
(каждый элемент ряда меньше или равен предыдущему).
У пользователя необходимо запрашивать новый элемент рейтинга.
Если в рейтинге существуют элементы с одинаковыми значениями,
то новый элемент с тем же значением должен разместиться после них.
Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
Набор натуральных чисел можно задать непосредственно в коде,
например, my_list = [7, 5, 3, 3, 2].
"""

user_list = [9, 7, 5, 2, 2]
user_rezult = int(input(('Введите значение для вставки')))
for i in user_list:
    j = user_list.index(i)
    if user_rezult == i or user_rezult > i:
        if user_rezult == i:
            user_list.insert(j + 1, user_rezult)
            break
        if user_rezult > i:
            user_list.insert(j, user_rezult)
            break
    if user_rezult < user_list[-1]:
        user_list.insert(len(user_list) + 1, user_rezult)
        break
print(user_list)
